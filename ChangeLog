28/10: Project initialized. (Mattias)
30/10: Skeleton code and datasets uploaded. (Mattias)
31/10: Creation of the function that reads the data from the provided files. (Mattias, Leo, Magnus)
01/11: Managed to eliminate the bad lines from the vector created from the data. (Mattias, Leo, Magnus)
01/11: Extracted relevant data from raw data, e.g.  temperature, date etc. Wrote data to a readable .dat file. (Leo, Magnus)
02/11: Managed to make the previous code work as intended for every dataset other than Uppsala, as that is a different type. (Herman, Leo,  Magnus)
02/11: Created tempPerDay that averages the temperature every day over a given year. (Mattias, Herman, Leo, Magnus)
03/11: Have a code that at least produces a graph, though not necessarily the one we want. (Leo, Herman)
03/11: Succesfully made a histogram of multiple datasets. (Leo, Herman)
03/11: Created tempPerDayExtended function that averages temp of every day from every year. (Magnus, Mattias)
03/11: Succesfully plotted tempPerDayExtended and have the current code in working format. (Leo, Magnus, Mattias)
03/11: Added legends to the plots in the previous stable version. (Leo)
04/11: Added function keep track to properly match the temperature with the day. (Magnus)
04/11: Changed the header to work for the Uppsala data set, and modified the functions to handle that case. (Leo, Magnus)
04/11: Added another function (tempEveryYear) that calculates the average temperature per year for every year in any dataset. (Leo, Magnus)
04/11: Added a for loop to tempEveryYear that finds the warmest and coldest years in a dataset and stores them in a vector. (Mattias)
05/11: Made two new .cpp files for plotting, one for tempPerDayExtended and one to plot the hottest and coldest year at each location. (Mattias, Leo, Herman, Magnus)
05/11: Now have the possibility to find the coldest and warmest day in the dataset. (Magnus)
05/11: plotComparison() function created to plot the highest, lowest and mean values of temperature of all days. (Leo, Magnus)
06/11: Created a plot to compare results (regarding warm and cold years, and mean overall temperature) that rely or don't rely on bad measurements. (Mattias)
06/11: Created plots that compare temperature behaviour throughout those years that were identified as warmest and coldest for different locations. (Mattias)
07/11: plotMidsummer() function created to make a histogram showing general temperature behaviour on the day of midsummer. (Magnus)
08/11: Added comments to several pieces of code. (Magnus)
